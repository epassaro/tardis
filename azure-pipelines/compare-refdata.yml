# Keep this line, is useful for testing without changing the notebook.
# sed -i "s/ref2_hash='upstream\/pr\/24'/ref1_hash='c998f44', ref2_hash='master'/g" ref_data_compare.ipynb

# This pipeline runs manually
trigger: none
pr: [ master ]

variables:
  package.manager: "mamba"
  build.dir: "$(Agent.BuildDirectory)"
  ref.data.url: "https://github.com/tardis-sn/tardis-refdata.git"
  ref.data.dir: "$(build.dir)/tardis-refdata"
  system.debug: "false"

jobs:
  - job: report
    pool:
      vmImage: "ubuntu-latest"

    steps:
      - bash: echo "##vso[task.setvariable variable=shellopts]errexit"
        displayName: "Force exit on error (bash)"

      - bash: echo "##vso[task.prependpath]$CONDA/bin"
        displayName: "Add conda to path"

      - bash: conda install mamba -c conda-forge -y
        displayName: "Install Mamba package manager"
        condition: eq(variables['package.manager'], 'mamba')

      - bash: $PACKAGE_MANAGER env create -f tardis_env3.yml
        displayName: "Install TARDIS environment"

      - bash: |
          source activate tardis
          $PACKAGE_MANAGER install bokeh=1.4 -c conda-forge --no-update-deps -y
        displayName: "Install Bokeh in TARDIS environment"

      - bash: sh ci-helpers/fetch_reference_data.sh
        displayName: "Fetch reference data"

      - bash: |
          source activate tardis
          python setup.py build_ext --inplace
        displayName: "Build & install TARDIS"

      - bash: |
          source activate tardis
          pytest tardis --tardis-refdata=$REF_DATA_DIR --generate-reference
        displayName: "Generate new reference data"

      - bash: |
          source activate tardis
          cd $REF_DATA_DIR
          git fetch upstream "+refs/pull/*/head:refs/remotes/upstream/pr/*"
          git checkout upstream/pr/28
        displayName: "Checkout"

      - bash: |
          source activate tardis
          cd $REF_DATA_DIR/notebooks
          jupyter nbconvert ref_data_compare.ipynb --to html --execute --ExecutePreprocessor.timeout=6000
        displayName: "Generating HTML report"

      - bash: |
          source activate tardis
          cd $REF_DATA_DIR/notebooks
          jupyter nbconvert ref_data_compare.ipynb --to html --execute --allow-errors --ExecutePreprocessor.timeout=6000
        displayName: "Generating (failed) HTML report"
        condition: failed()

      - task: PublishPipelineArtifact@1
        inputs:
          targetPath: "$(ref.data.dir)/notebooks/ref_data_compare.html"
          artifact: "html_report"
          publishLocation: "pipeline"
        displayName: "Publishing artifact"
        condition: succeededOrFailed()

      - bash: ls -lR /tmp
        displayName: "Check files in /tmp"
        condition: succeededOrFailed()
