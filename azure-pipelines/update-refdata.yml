# For more information on how to use this pipeline please refer to:
# http://tardis-sn.github.io/tardis/development/continuous_integration.html

trigger: none
pr: [ master ]

variables:
  system.debug: false
  commit.sha: '$(Build.SourceVersion)'
  pr.number: '$(System.PullRequest.PullRequestNumber)'
  build.id: '$(Build.BuildId)'
  job.id: '$(System.JobId)'
  log.url: 'https://dev.azure.com/tardis-sn/TARDIS/_build/results?buildId=$(build.id)&view=logs&jobId=$(job.id)'

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - job: 'push'
    steps:
      - template: templates/default.yml
        parameters:
          fetchRefdata: false  # We don't want to fetch the mirror
          useMamba: true
          skipInstall: true  # Enable temporarily (works ok)

      - bash: git clone https://github.com/tardis-sn/tardis-refdata $(refdata.dir)
        displayName: 'Fetch reference data repository'
        condition: false  # Disable temporarily (works ok)

      - bash: |
          cd $(tardis.dir)
          source activate tardis
          pytest tardis --tardis-refdata=$(refdata.dir) --generate-reference
        displayName: 'Generate reference data'
        condition: false  # Disable temporarily (not tested but should work)

      # Push changes

      # Run only if the pipeline is triggered by a pull request.
      - ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
        - task: GitHubComment@0
          inputs:
            gitHubConnection: 'tardis-sn'
            repositoryName: 'tardis-sn/tardis'
            id: $(pr.number)
            comment: '**Update succeeded** $(commit.sha) <br><br> Changes pushed to [tardis-sn/tardis-refdata](/tardis-sn/tardis-refdata).'
          displayName: 'Post results (success)'

        - task: GitHubComment@0
          inputs:
            gitHubConnection: 'tardis-sn'
            repositoryName: 'tardis-sn/tardis'
            id: $(pr.number)
            comment: '**Update failed** $(commit.sha) <br><br> Please check the [job log]($(log.url)).'
          displayName: 'Post results (failed)'
          #condition: failed()  # Commented for testing purposes
