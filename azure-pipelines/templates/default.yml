parameters:
  - name: workingDir
    type: string

  - name: fetchRefdata
    type: boolean
    default: false

  - name: useMamba
    type: boolean
    default: false

  - name: skipInstall
    type: boolean
    default: false

steps:
  - bash: echo "##vso[task.setvariable variable=shellopts]errexit"
    displayName: 'Force BASH exit if a command exits with non-zero status'
    condition: eq(variables['Agent.OS'], 'Linux')

  - checkout: self
    displayName: 'Fetch TARDIS repository (GitHub)'

  - ${{ if eq(parameters.fetchRefdata, true) }}:
    - checkout: git://TARDIS/tardis-refdata
      lfs: true
      displayName: 'Fetch reference data repository (Azure)'

  - ${{ if eq(parameters.fetchRefdata, false) }}:
    - bash: echo "##vso[task.setvariable variable=workingDir]${{ parameters.workingDir }}"
      displayName: 'Set workingDir env variable (single repo)'

  - ${{ if eq(parameters.fetchRefdata, true) }}:
    - bash: echo "##vso[task.setvariable variable=workingDir]${{ parameters.workingDir }}/s"
      displayName: 'Set workingDir env variable (multi-checkout)'

  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: 'Add conda to PATH'

  - bash: sudo chown -R $USER $CONDA
    displayName: 'Take ownership of conda installation (macOS)'
    condition: eq(variables['Agent.OS'], 'Darwin')

  - ${{ if eq(parameters.useMamba, true) }}:
    - bash: conda install mamba -c conda-forge -y
      displayName: 'Mamba package manager install'

  - ${{ if and( eq(parameters.skipInstall, false), eq(parameters.useMamba, false)) }}:
    - bash: |
        cd ${{ parameters.workingDir }}/tardis
        conda env create -f tardis_env3.yml
      displayName: 'TARDIS environment install'

  - ${{ if and( eq(parameters.skipInstall, false), eq(parameters.useMamba, true)) }}:
    - bash: |
        cd ${{ parameters.workingDir }}/tardis
        mamba env create -f tardis_env3.yml
      displayName: 'TARDIS environment install'

  - ${{ if eq(parameters.skipInstall, false) }}:
    - bash: |
        cd ${{ parameters.workingDir }}/tardis
        source activate tardis
        python setup.py build_ext --inplace
      displayName: "TARDIS build & install"
