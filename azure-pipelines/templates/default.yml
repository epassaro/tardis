parameters:
  - name: workingDir
    type: string
    default: '$(AgentBuildDirectory)'

  - name: packageManager
    type: string
    default: 'conda'

  - name: fetchRefdata
    type: boolean
    default: false

  - name: skipInstall
    type: boolean
    default: false

steps:
  - bash: echo "##vso[task.setvariable variable=shellopts]errexit"
    displayName: 'Exit BASH if a command exits with non-zero status'
    condition: eq(variables['Agent.OS'], 'Linux')

  - checkout: self
    displayName: 'Fetch TARDIS repository (GitHub)'

  - ${{ if eq(parameters.fetchRefdata, true) }}:
    - checkout: git://TARDIS/tardis-refdata
      lfs: true
      displayName: 'Fetch reference data repository (Azure)'

  - ${{ if eq(parameters.fetchRefdata, true) }}:
    - bash: echo "##vso[task.setvariable variable='$(workingDir)/s']workingDir"
      displayName: 'Override working directory variable (multi-checkout)'

  - bash: echo "##vso[task.prependpath]$CONDA/bin"
    displayName: 'Add conda to PATH'

  - bash: sudo chown -R $USER $CONDA
    displayName: 'Take ownership of conda installation (macOS)'
    condition: eq(variables['Agent.OS'], 'Darwin')

  - bash: $(packageManager) install mamba -c conda-forge -y
    displayName: 'Install Mamba package manager'

  - ${{ if eq(parameters.skipInstall, false) }}:
    - bash: |
        cd $(workingDir)/tardis
        $(packageManager) env create -f tardis_env3.yml
      displayName: 'Install TARDIS environment'

  - ${{ if eq(parameters.skipInstall, false) }}:
    - bash: |
        cd $(workingDir)/tardis
        source activate tardis
        python setup.py build_ext --inplace
      displayName: "TARDIS build & install"
